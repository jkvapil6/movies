{"version":3,"sources":["components/MoviesList.js","pages/welcome.js","pages/search.js","components/MovieInfo/GenresList.js","pages/movie.js","components/Layout.js","components/SearchForm.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["MoviesList","props","moviesList","styles","width","float","margin","movies","length","map","m","key","id","className","style","to","title","slice","concat","height","display","padding","src","poster_path","alt","class","Welcome","useState","popularMovies","setPopularMovies","useEffect","fetchMovies","a","fetch","then","response","json","data","results","Search","match","setTitle","setResults","params","input","href","role","onClick","console","log","GenresList","ul","genres","g","name","Movie","movie","setMovie","setGenres","releaseDate","setReleaseDate","fetchMovie","parseMovieInfo","status_code","error","status_message","release_date","catch","err","movieInfo","split","overview","Layout","paddingLeft","paddingRight","children","SearchForm","searchedTxt","setSearchedTxt","type","placeholder","value","onChange","e","target","Header","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Footer","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bfd8acd4.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n///\r\n/// Component displays movies\r\n///\r\nconst MoviesList = (props) => {\r\n\r\n  const styles = {\r\n    width: 200, \r\n    float: 'left', \r\n    margin: 10\r\n  }\r\n\r\n  let moviesList\r\n\r\n  if (props.movies.length > 0) {\r\n    moviesList = props.movies.map(m => (\r\n      <div key={ m.id } className=\"card mb-3\" style={ styles }>\r\n        <Link to={`/movie/${ m.id }`}>\r\n          <h5 className=\"card-header\">\r\n            { m.title.length < 16 ? m.title : m.title.slice(0, 13).concat('...') }\r\n          </h5>\r\n        </Link>\r\n        <img \r\n          style={{width: 185, height: 288, display: 'block', padding: 10}} \r\n          src={`http://image.tmdb.org/t/p/w185//`.concat(m.poster_path)} \r\n          alt=\"poster\" \r\n        />\r\n      </div>\r\n    ))\r\n  } else {\r\n    moviesList = <h2>Did not find any movies :(</h2>\r\n  }\r\n\r\n  return (\r\n    <div style={{float: 'left'}}>\r\n      <h1 className=\"display-3\">{ props.title }</h1>\r\n      <hr class=\"my-3\" />\r\n      { moviesList }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoviesList\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport MoviesList from '../components/MoviesList'\r\n\r\nconst api_key = '8da605a5d9396912aa1f7532d10a9839'\r\n\r\n///\r\n/// Welcome page\r\n///\r\nconst Welcome = () => {\r\n\r\n  /// DATA\r\n  \r\n  const [popularMovies, setPopularMovies] = useState([])\r\n\r\n  /// SIDE EFFECTS\r\n\r\n  useEffect(() => {\r\n    fetchMovies()\r\n  }, [])\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  ///\r\n  /// Loads movies immediately when component is loaded \r\n  ///\r\n  const fetchMovies = async () => {\r\n    fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${api_key}&language=en-US&page=1`)\r\n    .then(response => response.json())\r\n    .then(data => setPopularMovies(data.results))\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n  \r\n  ///\r\n  /// Test function\r\n  ///\r\n  const init = () => {\r\n    console.log(popularMovies)\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n  /////////////////////////////////////////////\r\n\r\n  return (\r\n    <div>\r\n      {/* <button onClick={init}>Click me</button> */}\r\n      \r\n      <MoviesList \r\n        title=\"Popular Movies\"\r\n        movies={popularMovies}\r\n      />\r\n\r\n      <MoviesList \r\n        title=\"Popular Series\"\r\n        movies={popularMovies}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Welcome\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport MoviesList from '../components/MoviesList'\r\n\r\nconst api_key = '8da605a5d9396912aa1f7532d10a9839'\r\n\r\n///\r\n/// Search page\r\n///\r\nconst Search = ({ match }) => {\r\n\r\n  /// DATA\r\n  const [title, setTitle] = useState(\"Results:\")\r\n  const [results, setResults] = useState([])\r\n\r\n  ///\r\n  /// Loads movies immediately when component is loaded \r\n  ///\r\n  useEffect(() => {\r\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${match.params.input}`)\r\n      .then(response => response.json())\r\n      .then(data => setResults(data.results))\r\n      .then(\r\n        () => setTitle(`Search results for ${match.params.input}:`)\r\n      )\r\n  }, [match.params.input])\r\n\r\n\r\n  const init = () => {\r\n    // fetch(`https://api.themoviedb.org/3/movie/550?api_key=${api_key}`)\r\n    // .then(response => response.json())\r\n    // .then(data => console.log(data));\r\n  \r\n    \r\n    // fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${api_key}&language=en-US&page=1`)\r\n    // .then(response => response.json())\r\n    // .then(data => {\r\n    //   console.log(data.results)\r\n    //   setPopularMovies(data.results)\r\n    //   console.log(popularMovies)\r\n    // }).then(\r\n    //   () => console.log(popularMovies)\r\n    // );\r\n  \r\n    if (results) {\r\n      console.log(results)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n     \r\n      <p className=\"lead\">\r\n        <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\" onClick={init}>Learn more</a>\r\n      </p>\r\n\r\n      <MoviesList \r\n        title={title}\r\n        movies={results}\r\n      />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\n///\r\n/// Component displays genres list\r\n///\r\nconst GenresList = (props) => {\r\n\r\n  let ul = <ul></ul>\r\n\r\n  if (props.genres && props.genres.length > 0) {\r\n    ul = props.genres.map(g => (\r\n      <li key={ g.id }>\r\n      { g.name }\r\n      </li>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      { ul }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GenresList\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport GenresList from '../components/MovieInfo/GenresList'\r\n\r\nconst api_key = '8da605a5d9396912aa1f7532d10a9839'\r\n\r\n///\r\n/// Component displays movie detail\r\n///\r\nconst Movie = ({ match }) => {\r\n\r\n  /// DATA\r\n\r\n  const [movie, setMovie] = useState(null)\r\n\r\n  const [genres, setGenres] = useState([])\r\n  const [releaseDate, setReleaseDate] = useState(\"\")\r\n  const [title, setTitle] = useState(\"\")\r\n\r\n  /// SIDE EFFECTS\r\n\r\n  useEffect(() => {\r\n    // console.log(match.params.id)\r\n    fetchMovie(match.params.id)\r\n\r\n  }, [match.params.id])\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  ///\r\n  /// Parses movie info from loaded data\r\n  ///\r\n  const parseMovieInfo = (data) => {\r\n\r\n    if (data.status_code) {\r\n      console.error(data.status_message)\r\n      setTitle(data.status_message)\r\n      return\r\n    }\r\n    \r\n    setMovie(data)\r\n\r\n    setGenres(data.genres)\r\n    setReleaseDate(data.release_date)\r\n\r\n    console.log(releaseDate)\r\n\r\n    setTitle(data.title)\r\n    \r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  ///\r\n  /// Loads movie info by id\r\n  ///\r\n  const fetchMovie = async (id) => {\r\n     fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${api_key}`)\r\n    .then(response => response.json())\r\n    .then(data => parseMovieInfo(data))\r\n    .catch(err => {\r\n      console.log(\"ERRORR\")\r\n    })\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  ///\r\n  /// Test function\r\n  ///\r\n  const show = () => {\r\n    // console.log(genres)\r\n    // console.log(releaseDate)\r\n    console.log(movie)\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n  /////////////////////////////////////////////\r\n\r\n  const styles = {\r\n    width: '100%', \r\n    float: 'left', \r\n    margin: 10\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  let movieInfo = <div></div>\r\n\r\n  if (movie && !movie.status_code) {\r\n    movieInfo = (     \r\n      <div>\r\n        <h2>({ releaseDate.split('-')[0] })</h2>\r\n        <img \r\n          style={{width: 185, display: 'block', padding: 10}} \r\n          src={`http://image.tmdb.org/t/p/w185//`.concat(movie.poster_path)} \r\n          alt=\"movie card\" \r\n        />\r\n\r\n        <GenresList genres={genres} />\r\n        \r\n        <p>{ movie.overview }</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  return (\r\n    <div style={ styles }>\r\n      <h1>{ title }</h1> \r\n      \r\n      { movieInfo }\r\n\r\n      <button onClick={show}>Show</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Movie\r\n","import React from 'react'\r\n\r\nconst Layout = (props) => {\r\n\r\n  const styles = {\r\n    float: 'left',\r\n    width: '100%',\r\n    paddingLeft: '15%',\r\n    paddingRight: '15%'\r\n  }\r\n\r\n  return (\r\n    <div className=\"jumbotron\" style={styles}>\r\n      { props.children }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst SearchForm = () => {\r\n\r\n  const [searchedTxt, setSearchedTxt] = useState(\"\")\r\n\r\n  const handleInputChange = (e) => {\r\n    setSearchedTxt(e.target.value)\r\n  }\r\n\r\n  return (\r\n      <form className=\"form-inline my-2 my-lg-0\">\r\n        <input \r\n          className=\"form-control mr-sm-2\" \r\n          type=\"text\" \r\n          placeholder=\"Search\" \r\n          value={searchedTxt} \r\n          onChange={handleInputChange} \r\n        />\r\n        <Link to={`/search/${ searchedTxt }`}>\r\n          <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </Link>\r\n\r\n        \r\n      </form>\r\n  )\r\n}\r\n\r\nexport default SearchForm\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport SearchForm from './SearchForm'\r\n\r\nconst Header = () => {\r\n\r\n  const styles = {\r\n    paddingLeft: '15%',\r\n    paddingRight: '15%'\r\n  }\r\n\r\n  return (\r\n    <header className=\"App-header\">\r\n\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\" style={styles}>\r\n          \r\n          <Link to=\"/\" className=\"navbar-brand\">Movies Database</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n             \r\n            </ul>\r\n\r\n            <SearchForm />\r\n          </div>\r\n        </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"page-footer font-small unique-color-dark pt-4\">\r\n      <div className=\"container\">\r\n        <ul className=\"list-unstyled list-inline text-center py-2\">\r\n          <li className=\"list-inline-item\">\r\n            <h5 className=\"mb-1\">React Assignment App</h5>\r\n            <p>Created by\r\n            <br />\r\n            <i>jkvapil6@gmail.com</i></p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport Welcome from './pages/welcome'\nimport Search from './pages/search'\nimport Movie from './pages/movie'\n\nimport Layout from './components/Layout'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nimport './styles/bootstrap.min.css'\nimport './App.css'\n\nconst App = () => {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n\n        <Layout>\n          <Switch>\n            <Route exact path='/' component={ Welcome }/>\n            <Route exact path='/search/:input' component={ Search }/>\n\n            <Route exact path='/search/' component={ Welcome }/>\n            \n            {/* <Route path='/movie' component={ Movie }/> */}\n            <Route exact path='/movie/:id' component={ Movie }/>\n          </Switch>\n        </Layout>\n        <Footer />\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}