{"version":3,"sources":["components/MoviesList.js","model/Record.js","pages/welcome.js","pages/search.js","components/MovieInfo/GenresList.js","components/MovieInfo/TrailerModal.js","pages/movie.js","pages/serie.js","components/Layout.js","components/SearchForm.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["MoviesList","props","styles","width","float","margin","moviesList","movies","length","map","m","key","id","className","style","to","type","title","slice","concat","maxWidth","height","display","padding","src","poster_path","alt","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","Record","genres","overview","this","api_key","Welcome","useState","popularMovies","setPopularMovies","popularSeries","setPopularSeries","familyMovies","setFamilyMovies","documentaryMovies","setDocumentaryMovies","useEffect","fetchMovies","parseMovie","data","console","log","status_code","res","results","name","forEach","s","tmp","push","a","fetch","then","response","json","Search","match","setTitle","setResults","params","input","GenresList","ul","g","TrailerModal","Modal","show","onHide","handleClose","Header","closeButton","Title","Body","class","allowfullscreen","Footer","Button","variant","onClick","Movie","movie","setMovie","setGenres","releaseDate","setReleaseDate","showVideo","setShowVideo","fetchMovie","parseMovieInfo","error","status_message","release_date","movieInfo","split","Serie","parseSerieInfo","first_air_date","Layout","paddingLeft","paddingRight","children","SearchForm","searchedTxt","setSearchedTxt","placeholder","value","onChange","e","target","App","basename","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.86417b43.chunk.js","sourcesContent":["import React from 'react'\r\nimport Slider from \"react-slick\";\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\n///\r\n/// Component displays movies\r\n///\r\nconst MoviesList = (props) => {\r\n\r\n  // styles for single movie card \r\n  const styles = {\r\n    width: 200, \r\n    float: 'left', \r\n    margin: 10\r\n  }\r\n\r\n  let moviesList = <div></div>\r\n\r\n  if (props.movies && props.movies.length > 0) {\r\n\r\n    moviesList = props.movies.map(m => (\r\n      <div key={ m.id } className=\"card mb-3\" style={ styles }>\r\n        <Link to={props.type === \"Movies\" ? `/movie/${ m.id }` : `/serie/${ m.id }` }>\r\n          <h5 className=\"card-header\">\r\n            { m.title.length < 16 ? m.title : m.title.slice(0, 13).concat('...') }\r\n          </h5>\r\n        </Link>\r\n        <Link to={props.type === \"Movies\" ? `/movie/${ m.id }` : `/serie/${ m.id }` }>\r\n        <img \r\n          style={{width:'100%', margin: 'auto', maxWidth: 250, height: 288, display: 'block', padding: 10}} \r\n          src={`http://image.tmdb.org/t/p/w300//`.concat(m.poster_path)} \r\n          alt=\"poster\" \r\n        />\r\n        </Link>\r\n      </div>\r\n    ))\r\n  }\r\n  \r\n\r\n  /////////////////////////////////////////////\r\n\r\n  // slick responsive settings\r\n  const settings = {\r\n    dots: true,\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 5,\r\n    slidesToScroll: 5,\r\n    initialSlide: 0,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1180,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 4,\r\n          infinite: true,\r\n          dots: true\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 3,\r\n          infinite: true,\r\n          dots: true\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n          initialSlide: 2\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  /////////////////////////////////////////////\r\n  /////////////////////////////////////////////\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">{ props.title }</h1>\r\n      <hr className=\"my-2\" />\r\n      <Slider {...settings}>\r\n       { moviesList }\r\n      </Slider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoviesList\r\n","// @ts-check\r\n\r\n/**\r\n * Class represents movie or TV serie\r\n */\r\nclass Record {\r\n  /**\r\n   *\r\n   * @param {string} title \r\n   * @param {string} poster_path \r\n   * @param {number} id\r\n   * @param {array} genres\r\n   * @param {string} overview indentifier of strategy\r\n   */\r\n  constructor(title, poster_path, id, genres, overview) {\r\n    this.title = title\r\n    this.poster_path = poster_path\r\n    this.id = id\r\n    this.genres = genres\r\n    this.overview = overview\r\n  }\r\n}\r\n\r\nexport default Record","// @ts-check\r\n\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nimport MoviesList from '../components/MoviesList'\r\n\r\nimport Record from '../model/Record'\r\n\r\nconst api_key = '8da605a5d9396912aa1f7532d10a9839'\r\n\r\n///\r\n/// Welcome page\r\n///\r\nconst Welcome = () => {\r\n\r\n  /// DATA\r\n  \r\n  const [popularMovies, setPopularMovies] = useState([])\r\n  const [popularSeries, setPopularSeries] = useState([])\r\n  const [familyMovies, setFamilyMovies] = useState([])\r\n  const [documentaryMovies, setDocumentaryMovies] = useState([])\r\n\r\n  /// SIDE EFFECTS\r\n\r\n  useEffect(() => {\r\n    fetchMovies()\r\n  }, [])\r\n\r\n  /////////////////////////////////////////////\r\n  \r\n  ///\r\n  /// Creates unified record of movie / serie\r\n  ///\r\n  const parseMovie = (data) => {\r\n\r\n    console.log(data)\r\n\r\n    if (!data.status_code) {\r\n\r\n      const res = []\r\n\r\n      // Serie\r\n      if (data.results[0].name) {\r\n        data.results.forEach(s => {\r\n\r\n          const tmp = new Record(\r\n            s.name,\r\n            s.poster_path,\r\n            s.id,\r\n            [\"TV Serie\"],\r\n            s.overview\r\n          )\r\n          \r\n          res.push(tmp)\r\n        })\r\n\r\n        return res\r\n      } \r\n\r\n      // Movie\r\n      if (data.results[0].title) {\r\n        data.results.forEach(s => {\r\n\r\n          const tmp = new Record(\r\n            s.title,\r\n            s.poster_path,\r\n            s.id,\r\n            s.genres,\r\n            s.overview\r\n          )\r\n          \r\n          res.push(tmp)\r\n        })\r\n\r\n        return res\r\n      } \r\n\r\n      else return data.results\r\n\r\n    }\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  ///\r\n  /// Loads movies immediately when component is loaded \r\n  ///\r\n  const fetchMovies = async () => {\r\n    fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${api_key}&language=en-US&page=1`)\r\n      .then(response => response.json())\r\n      .then(data => setPopularMovies(parseMovie(data)))\r\n\r\n    fetch(`https://api.themoviedb.org/3/tv/popular?api_key=${api_key}&language=en-US&page=1`)\r\n      .then(response => response.json())\r\n      .then(data => setPopularSeries(parseMovie(data)))\r\n\r\n    fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=99&language=en-US&page=1`)\r\n      .then(response => response.json())\r\n      .then(data => setDocumentaryMovies(parseMovie(data)))\r\n\r\n    fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=10751&language=en-US&page=1`)\r\n      .then(response => response.json())\r\n      .then(data => setFamilyMovies(parseMovie(data)))\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n  /////////////////////////////////////////////\r\n\r\n  return (\r\n    <div>\r\n      <MoviesList \r\n        type=\"Movies\" \r\n        title=\"Popular Movies\"\r\n        movies={popularMovies}\r\n      />\r\n      <MoviesList\r\n        type=\"Series\" \r\n        title=\"Popular Series\"\r\n        movies={popularSeries}\r\n      />\r\n      <MoviesList \r\n        type=\"Movies\" \r\n        title=\"Family\"\r\n        movies={familyMovies}\r\n      />\r\n      <MoviesList \r\n        type=\"Movies\" \r\n        title=\"Documentary\"\r\n        movies={documentaryMovies}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Welcome\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport MoviesList from '../components/MoviesList'\r\n\r\nconst api_key = '8da605a5d9396912aa1f7532d10a9839'\r\n\r\n///\r\n/// Search page\r\n///\r\nconst Search = ({ match }) => {\r\n\r\n  /// DATA\r\n  const [title, setTitle] = useState(\"Results:\")\r\n  const [results, setResults] = useState([])\r\n\r\n  ///\r\n  /// Loads movies immediately when component is loaded \r\n  ///\r\n  useEffect(() => {\r\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${match.params.input}&language=en-US&page=1`)\r\n      .then(response => response.json())\r\n      .then(data => setResults(data.results))\r\n      .then(() => setTitle(`Search results for ${match.params.input}:`))\r\n  }, [match.params.input])\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  return (\r\n    <div>\r\n      <MoviesList \r\n        title={title}\r\n        movies={results}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\n///\r\n/// Component displays genres list\r\n///\r\nconst GenresList = (props) => {\r\n\r\n  let ul = <ul></ul>\r\n\r\n  if (props.genres && props.genres.length > 0) {\r\n    ul = props.genres.map(g => (\r\n      <li key={ g.id }>\r\n      { g.name }\r\n      </li>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      { ul }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GenresList\r\n","import React from 'react'\r\nimport {Button, Modal} from 'react-bootstrap'\r\n\r\n///\r\n/// TrailerModal component shows trailer video\r\n///\r\nconst TrailerModal = (props) => {\r\n  return (\r\n    <>\r\n      <Modal show={props.show} onHide={props.handleClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>{props.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div class=\"embed-responsive embed-responsive-16by9\">\r\n            <iframe \r\n              title={props.title} \r\n              class=\"embed-responsive-item\" \r\n              src={props.src} \r\n              allowfullscreen={true} />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={props.handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TrailerModal","import React, { useEffect, useState } from 'react'\r\n\r\nimport GenresList from '../components/MovieInfo/GenresList'\r\nimport TrailerModal from '../components/MovieInfo/TrailerModal'\r\n\r\nconst api_key = '8da605a5d9396912aa1f7532d10a9839'\r\n\r\n///\r\n/// Component displays movie detail\r\n///\r\nconst Movie = ({ match }) => {\r\n\r\n  /// DATA\r\n  const [movie, setMovie] = useState(null)\r\n\r\n  const [genres, setGenres] = useState([])\r\n  const [releaseDate, setReleaseDate] = useState(\"\")\r\n  const [title, setTitle] = useState(\"\")\r\n\r\n  /// GUI\r\n  const [showVideo, setShowVideo] = useState(false)\r\n\r\n  /// SIDE EFFECTS\r\n  useEffect(() => {\r\n    fetchMovie(match.params.id)\r\n  }, [match.params.id])\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  ///\r\n  /// Parses movie info from loaded data\r\n  ///\r\n  const parseMovieInfo = (data) => {\r\n\r\n    if (data.status_code) {\r\n      console.error(data.status_message)\r\n      setTitle(data.status_message)\r\n      return\r\n    }\r\n    \r\n    setMovie(data)\r\n    setGenres(data.genres)\r\n    setReleaseDate(data.release_date)\r\n    setTitle(data.title)\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  ///\r\n  /// Loads movie info by id\r\n  ///\r\n  const fetchMovie = async (id) => {\r\n\r\n     fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${api_key}&language=en-US&page=1`)\r\n      .then(response => response.json())\r\n      .then(data => parseMovieInfo(data))\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n  /////////////////////////////////////////////\r\n\r\n  const styles = {\r\n    width: '100%', \r\n    float: 'left', \r\n    margin: 10\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  let movieInfo = <div>Cannot load this movie</div>\r\n\r\n  if (movie && !movie.status_code) {\r\n    movieInfo = (     \r\n      <div>          \r\n        <div className=\"movie-info\">\r\n          <div className=\"movie-info-logo\">  \r\n            <img \r\n              src={`http://image.tmdb.org/t/p/w500//`.concat(movie.poster_path)} \r\n              alt=\"movie card\" \r\n            />\r\n          </div>\r\n\r\n          <div className=\"movie-info-content\">\r\n\r\n           <h1 className=\"display-4\">{\r\n              title.concat(\" (\")\r\n                .concat(releaseDate.split('-')[0])\r\n                .concat(\")\")}\r\n            </h1> \r\n              \r\n            <hr className=\"my-3\" />\r\n\r\n            <h3>Genres</h3>\r\n            <GenresList genres={genres} />\r\n            <hr className=\"my-3\" />\r\n\r\n            <h3>Overview</h3>\r\n            <p className=\"lead\">{ movie.overview }</p>\r\n\r\n            <hr className=\"my-3\" />\r\n\r\n            <TrailerModal\r\n              title={ title }\r\n              show={ showVideo }\r\n              handleClose={() => setShowVideo(false)}\r\n              src={\"https://www.youtube.com/embed/zpOULjyy-n8?rel=0\"} \r\n            />\r\n\r\n            <button \r\n              className=\"btn btn-secondary my-2 my-sm-0\" \r\n              type=\"submit\"\r\n              onClick={() => setShowVideo(true)}\r\n            > Play Trailer </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  return (\r\n    <div style={ styles }>  \r\n      { movieInfo }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Movie\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport GenresList from '../components/MovieInfo/GenresList'\r\nimport TrailerModal from '../components/MovieInfo/TrailerModal'\r\n\r\nconst api_key = '8da605a5d9396912aa1f7532d10a9839'\r\n\r\n///\r\n/// Component displays movie detail\r\n///\r\nconst Serie = ({ match }) => {\r\n\r\n  /// DATA\r\n  const [movie, setMovie] = useState(null)\r\n\r\n  const [genres, setGenres] = useState([])\r\n  const [releaseDate, setReleaseDate] = useState(\"\")\r\n  const [title, setTitle] = useState(\"\")\r\n\r\n  /// GUI\r\n  const [showVideo, setShowVideo] = useState(false)\r\n\r\n  /// SIDE EFFECTS\r\n  useEffect(() => {\r\n    fetchMovie(match.params.id)\r\n  }, [match.params.id])\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  ///\r\n  /// Parses serie info from loaded data\r\n  ///\r\n  const parseSerieInfo = (data) => {\r\n\r\n    if (data.status_code) {\r\n      console.error(data.status_message)\r\n      setTitle(data.status_message)\r\n      return\r\n    }\r\n    \r\n    setMovie(data)\r\n    setGenres(data.genres)\r\n    setReleaseDate(data.first_air_date)\r\n    setTitle(data.name)\r\n    \r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  ///\r\n  /// Loads movie info by id\r\n  ///\r\n  const fetchMovie = async (id) => {\r\n     fetch(`https://api.themoviedb.org/3/tv/${id}?api_key=${api_key}&language=en-US&page=1`)\r\n      .then(response => response.json())\r\n      .then(data => parseSerieInfo(data))\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n  /////////////////////////////////////////////\r\n\r\n  let movieInfo = <div></div>\r\n\r\n  if (movie && !movie.status_code) {\r\n    movieInfo = (     \r\n      <div>                \r\n        <div className=\"movie-info\">\r\n          <div className=\"movie-info-logo\"> \r\n            <img \r\n              src={`http://image.tmdb.org/t/p/w500//`.concat(movie.poster_path)} \r\n              alt=\"movie card\" \r\n            />\r\n          </div>\r\n\r\n          <div className=\"movie-info-content\">\r\n            <h1 className=\"display-4\">{\r\n              title.concat(\" (\")\r\n                .concat(releaseDate.split('-')[0])\r\n                .concat(\")\")}\r\n            </h1> \r\n                \r\n            <hr className=\"my-3\" />\r\n\r\n            <h3>Genres</h3>\r\n            <GenresList genres={genres} />\r\n            <hr className=\"my-3\" />\r\n\r\n            <h3>Overview</h3>\r\n            <p className=\"lead\">{ movie.overview }</p>\r\n\r\n            <hr className=\"my-3\" />\r\n\r\n            <TrailerModal\r\n              title={ title }\r\n              show={ showVideo }\r\n              handleClose={() => setShowVideo(false)}\r\n              src={\"https://www.youtube.com/embed/zpOULjyy-n8?rel=0\"} \r\n            />\r\n\r\n            <button \r\n              className=\"btn btn-secondary my-2 my-sm-0\" \r\n              type=\"submit\"\r\n              onClick={() => setShowVideo(true)}\r\n            > Play Trailer </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  return (\r\n    <div>\r\n      { movieInfo }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Serie\r\n","import React from 'react'\r\n\r\n///\r\n/// Layout Component\r\n///\r\nconst Layout = (props) => {\r\n\r\n  const styles = {\r\n    float: 'left',\r\n    width: '100%',\r\n    paddingLeft: '15%',\r\n    paddingRight: '15%'\r\n  }\r\n\r\n  return (\r\n    <div className=\"jumbotron\" style={styles}>\r\n      { props.children }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n///\r\n/// Search Form Component \r\n///\r\nconst SearchForm = () => {\r\n\r\n  const [searchedTxt, setSearchedTxt] = useState(\"\")\r\n\r\n  const handleInputChange = (e) => {\r\n    setSearchedTxt(e.target.value)\r\n  }\r\n  \r\n  /////////////////////////////////////////////\r\n\r\n  return (\r\n    <form className=\"form-inline my-2 my-lg-0\">\r\n      <input \r\n        className=\"form-control mr-sm-2\"\r\n        style={{height: 42}} \r\n        type=\"text\" \r\n        placeholder=\"Search\" \r\n        value={searchedTxt} \r\n        onChange={handleInputChange} \r\n      />\r\n      <Link to={`/search/${ searchedTxt }`}>\r\n        <button \r\n          className=\"btn btn-secondary my-2 my-sm-0\" \r\n          type=\"submit\"\r\n        >Search</button>\r\n      </Link>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SearchForm\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport SearchForm from './SearchForm'\r\n\r\n///\r\n/// Header Component\r\n///\r\nconst Header = () => {\r\n\r\n  const styles = {\r\n    paddingLeft: '15%',\r\n    paddingRight: '15%'\r\n  }\r\n\r\n  return (\r\n    <header className=\"App-header\">\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\" style={styles}>\r\n          <Link to=\"/\" className=\"navbar-brand\">Movies Database</Link>\r\n\r\n          <div className=\"navbar-collapse\">\r\n            <ul className=\"navbar-nav mr-auto\"></ul>\r\n\r\n            <SearchForm />\r\n          </div>\r\n        </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"page-footer font-small unique-color-dark pt-4\">\r\n      <div className=\"container\">\r\n        <ul className=\"list-unstyled list-inline text-center py-2\">\r\n          <li className=\"list-inline-item\">\r\n            <h5 className=\"mb-1\">React Assignment App</h5>\r\n            <p>Created by\r\n            <br />\r\n            <i>jkvapil6@gmail.com</i></p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\n// import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport Welcome from './pages/welcome'\nimport Search from './pages/search'\nimport Movie from './pages/movie'\nimport Serie from './pages/serie'\n\nimport Layout from './components/Layout'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nimport './styles/bootstrap.min.css'\n\n///\n/// App Main Component \n///\nconst App = () => {\n  return (\n    <Router basename=\"/\">\n      <div className=\"App\">\n        <Header />\n\n        <Layout>\n          <Switch>\n            <Route exact path='/' component={ Welcome }/>\n            <Route exact path='/search/:input' component={ Search }/>\n            <Route exact path='/search/' component={ Welcome }/>\n            <Route exact path='/serie/:id' component={ Serie }/>\n            <Route exact path='/movie/:id' component={ Movie }/>\n          </Switch>\n        </Layout>\n        <Footer />\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}